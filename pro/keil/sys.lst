C51 COMPILER V9.00   SYS                                                                   07/18/2016 22:42:55 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SYS
OBJECT MODULE PLACED IN .\sys.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\sys\sys.c COMPACT BROWSE INCDIR(..\..\sys;..\..\app;..\..\hal) DEBUG 
                    -OBJECTEXTEND PRINT(.\sys.lst) OBJECT(.\sys.obj)

line level    source

   1          #include "sys.h"
   2          #include "motor.h"
   3          #include "mproto.h"
   4          
   5          static MProtoStep_t *g_curStepInfo = NULL;
   6          static uint8_t g_stepCount = 0;
   7          static bool g_sysStatus = SYS_STATUS_IDLE;
   8          
   9          static bool sysMotor1SensorTriggered(void)
  10          {
  11   1          if(HalGpioPinValueGet(HAL_MOTOR1_TRIGGER1_PIN)) //P00
  12   1          {
  13   2              return true;
  14   2          }
  15   1          return false;
  16   1      }
  17          
  18          static bool sysMotor2SensorTriggered(void)
  19          {
  20   1          if(!HalGpioPinValueGet(HAL_MOTOR2_TRIGGER1_PIN))  //P01
  21   1          {
  22   2              return true;
  23   2          }
  24   1          return false;
  25   1      }
  26          
  27          
  28          static void sysMotorInit(void)
  29          {
  30   1          MotorTriggeredRegister(0, sysMotor1SensorTriggered);
  31   1          MotorTriggeredRegister(1, sysMotor2SensorTriggered);
  32   1      }
  33          
  34          static void sysMotorEventHandle(uint8_t id, MotorEvent_t event)
  35          {
  36   1          bool doNextStep = false;
  37   1      
  38   1          if(MOTOR_EVENT_STEP_OVER == event)
  39   1          {
  40   2              doNextStep = true;
  41   2              if(g_curStepInfo->flag == 1) 
  42   2              {
  43   3                  MProtoCtrlResult(MPROTO_RESULT_SENOR_ERROR); //´«¸ÐÆ÷Î´´¥·¢
  44   3              }
  45   2          }
  46   1          else if(MOTOR_EVENT_SENSOR_TRIGGERED == event)
  47   1          {
  48   2              if(g_curStepInfo != NULL 
  49   2                  && g_curStepInfo->id == id
  50   2                  && g_curStepInfo->flag == 1)
  51   2              {
  52   3                  doNextStep = true;
  53   3              }
  54   2          }
C51 COMPILER V9.00   SYS                                                                   07/18/2016 22:42:55 PAGE 2   

  55   1      
  56   1          if(doNextStep)
  57   1          {
  58   2              MotorStop(id);
  59   2              if(g_stepCount == 0)
  60   2              {
  61   3                  g_sysStatus = SYS_STATUS_IDLE;
  62   3                  MProtoCtrlResult(MPROTO_RESULT_SUCCESS);
  63   3                  g_curStepInfo = NULL;
  64   3              }
  65   2              else
  66   2              {
  67   3                  g_curStepInfo++;
  68   3                  g_stepCount--;
  69   3                  MotorStart(g_curStepInfo->id, g_curStepInfo->dir, g_curStepInfo->cycle);
  70   3              }
  71   2          }
  72   1      }
  73          
  74          static void sysEventHandle(uint8_t event, void *args)
  75          {
  76   1          MProtoStepInfo_t *stepInfo = NULL;
  77   1          
  78   1          switch(event)
  79   1          {
  80   2          case SYS_EVENT_SELFCHECK:
  81   2              break;
  82   2          case SYS_EVENT_MOTOR_CONTRL:
  83   2              stepInfo = (MProtoStepInfo_t *)args;
  84   2              g_curStepInfo = stepInfo->step;
  85   2              g_stepCount = stepInfo->count - 1;
  86   2              g_sysStatus = SYS_STATUS_BUSY;
  87   2              MotorStart(g_curStepInfo->id, g_curStepInfo->dir, g_curStepInfo->cycle);
  88   2              break;
  89   2          default:
  90   2              break;
  91   2          }
  92   1      }
  93          
  94          void SysInit(void)
  95          {
  96   1          HalInit();
  97   1          MProtoInit(sysEventHandle);
  98   1          MotorInit(sysMotorEventHandle);
  99   1          sysMotorInit();
 100   1      }
 101          
 102          void SysPoll(void)
 103          {
 104   1          MotorPoll();
 105   1          MProtoPoll();
 106   1      }
 107          
 108          SysStatus_t SysGetStatus(void)
 109          {
 110   1          return g_sysStatus;
 111   1      }
 112          
 113          uint8_t SysGetDevAddr(void)
 114          {
 115   1          return HalGetDevAddr();
 116   1      }
C51 COMPILER V9.00   SYS                                                                   07/18/2016 22:42:55 PAGE 3   

 117          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    385    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      5       9
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
