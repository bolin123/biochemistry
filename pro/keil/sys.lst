C51 COMPILER V9.00   SYS                                                                   07/10/2016 15:50:44 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SYS
OBJECT MODULE PLACED IN .\sys.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\sys\sys.c COMPACT BROWSE INCDIR(..\..\sys;..\..\app;..\..\hal) DEBUG 
                    -OBJECTEXTEND PRINT(.\sys.lst) OBJECT(.\sys.obj)

line level    source

   1          #include "sys.h"
   2          #include "motor.h"
   3          #include "mproto.h"
   4          
   5          static MProtoStep_t *g_curStepInfo = NULL;
   6          static uint8_t g_stepCount = 0;
   7          
   8          static bool sysMotor1SensorTriggered(void)
   9          {
  10   1          if(HalGpioPinValueGet(0x00) == 0) //P00
  11   1          {
  12   2              return true;
  13   2          }
  14   1          return false;
  15   1      }
  16          
  17          static bool sysMotor2SensorTriggered(void)
  18          {
  19   1          if(HalGpioPinValueGet(0x01))  //P01
  20   1          {
  21   2              return true;
  22   2          }
  23   1          return false;
  24   1      }
  25          
  26          
  27          static void sysMotorInit(void)
  28          {
  29   1          MotorTriggeredRegister(0, sysMotor1SensorTriggered);
  30   1          MotorTriggeredRegister(1, sysMotor2SensorTriggered);
  31   1          //MotorStart(0, MOTOR_DIR_BACKWARD, 0, NULL);
  32   1          //MotorStart(1, MOTOR_DIR_BACKWARD, 0, NULL);
  33   1          //MotorStart(1, MOTOR_DIR_BACKWARD, 50, testMotorCb);
  34   1      }
  35          
  36          static void sysMotorEventHandle(uint8_t id, MotorEvent_t event)
  37          {
  38   1          bool doNextStep = false;
  39   1      
  40   1          if(MOTOR_EVENT_STEP_OVER == event)
  41   1          {
  42   2              doNextStep = true;
  43   2          }
  44   1          else if(MOTOR_EVENT_SENSOR_TRIGGERED == event)
  45   1          {
  46   2              if(g_curStepInfo->count == 0)
  47   2              {
  48   3                  doNextStep = true;
  49   3              }
  50   2          }
  51   1      
  52   1          if(doNextStep)
  53   1          {
  54   2              MotorStop(id);
C51 COMPILER V9.00   SYS                                                                   07/10/2016 15:50:44 PAGE 2   

  55   2              if(g_stepCount == 0)
  56   2              {
  57   3                  MProtoCtrlResult(0);
  58   3                  g_curStepInfo = NULL;
  59   3              }
  60   2              else
  61   2              {
  62   3                  g_curStepInfo++;
  63   3                  g_stepCount--;
  64   3                  MotorStart(g_curStepInfo->id, g_curStepInfo->dir, g_curStepInfo->count);
  65   3              }
  66   2          }
  67   1      }
  68          
  69          static void sysEventHandle(uint8_t event, void *args)
  70          {
  71   1          MProtoStepInfo_t *stepInfo = NULL;
  72   1          switch(event)
  73   1          {
  74   2          case SYS_EVENT_SELFCHECK:
  75   2              break;
  76   2          case SYS_EVENT_MOTOR_CONTRL:
  77   2              stepInfo = (MProtoStepInfo_t *)args;
  78   2              g_curStepInfo = stepInfo->step;
  79   2              g_stepCount = stepInfo->count - 1;
  80   2              MotorStart(g_curStepInfo->id, g_curStepInfo->dir, g_curStepInfo->count);
  81   2              break;
  82   2          default:
  83   2              break;
  84   2          }
  85   1      }
  86          
  87          void SysInit(void)
  88          {
  89   1          HalInit();
  90   1          MProtoInit(sysEventHandle);
  91   1          MotorInit(sysMotorEventHandle);
  92   1          sysMotorInit();
  93   1      }
  94          
  95          void SysPoll(void)
  96          {
  97   1          MotorPoll();
  98   1          MProtoPoll();
  99   1      }
 100          
 101          uint8_t SysGetDevAddr(void)
 102          {
 103   1          return HalGetDevAddr();
 104   1      }
 105          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    301    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      4       6
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.00   SYS                                                                   07/10/2016 15:50:44 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
