C51 COMPILER V9.00   SYS                                                                   07/10/2016 22:14:08 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SYS
OBJECT MODULE PLACED IN .\sys.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\sys\sys.c COMPACT BROWSE INCDIR(..\..\sys;..\..\app;..\..\hal) DEBUG 
                    -OBJECTEXTEND PRINT(.\sys.lst) OBJECT(.\sys.obj)

line level    source

   1          #include "sys.h"
   2          #include "motor.h"
   3          #include "mproto.h"
   4          
   5          static MProtoStep_t *g_curStepInfo = NULL;
   6          static uint8_t g_stepCount = 0;
   7          static bool g_sysStatus = SYS_STATUS_IDLE;
   8          
   9          static bool sysMotor1SensorTriggered(void)
  10          {
  11   1          if(HalGpioPinValueGet(0x00) == 0) //P00
  12   1          {
  13   2              return true;
  14   2          }
  15   1          return false;
  16   1      }
  17          
  18          static bool sysMotor2SensorTriggered(void)
  19          {
  20   1          if(HalGpioPinValueGet(0x01))  //P01
  21   1          {
  22   2              return true;
  23   2          }
  24   1          return false;
  25   1      }
  26          
  27          
  28          static void sysMotorInit(void)
  29          {
  30   1          MotorTriggeredRegister(0, sysMotor1SensorTriggered);
  31   1          MotorTriggeredRegister(1, sysMotor2SensorTriggered);
  32   1          //MotorStart(0, MOTOR_DIR_BACKWARD, 0, NULL);
  33   1          //MotorStart(1, MOTOR_DIR_BACKWARD, 0, NULL);
  34   1          //MotorStart(1, MOTOR_DIR_BACKWARD, 50, testMotorCb);
  35   1      }
  36          
  37          static void sysMotorEventHandle(uint8_t id, MotorEvent_t event)
  38          {
  39   1          bool doNextStep = false;
  40   1      
  41   1          if(MOTOR_EVENT_STEP_OVER == event)
  42   1          {
  43   2              doNextStep = true;
  44   2          }
  45   1          else if(MOTOR_EVENT_SENSOR_TRIGGERED == event)
  46   1          {
  47   2              if(g_curStepInfo != NULL && g_curStepInfo->count == 0)
  48   2              {
  49   3                  doNextStep = true;
  50   3              }
  51   2          }
  52   1      
  53   1          if(doNextStep)
  54   1          {
C51 COMPILER V9.00   SYS                                                                   07/10/2016 22:14:08 PAGE 2   

  55   2              MotorStop(id);
  56   2              if(g_stepCount == 0)
  57   2              {
  58   3                  g_sysStatus = SYS_STATUS_IDLE;
  59   3                  MProtoCtrlResult(MPROTO_RESULT_SUCCESS);
  60   3                  g_curStepInfo = NULL;
  61   3              }
  62   2              else
  63   2              {
  64   3                  g_curStepInfo++;
  65   3                  g_stepCount--;
  66   3                  MotorStart(g_curStepInfo->id, g_curStepInfo->dir, g_curStepInfo->count);
  67   3              }
  68   2          }
  69   1      }
  70          
  71          static void sysEventHandle(uint8_t event, void *args)
  72          {
  73   1          MProtoStepInfo_t *stepInfo = NULL;
  74   1          switch(event)
  75   1          {
  76   2          case SYS_EVENT_SELFCHECK:
  77   2              break;
  78   2          case SYS_EVENT_MOTOR_CONTRL:
  79   2              stepInfo = (MProtoStepInfo_t *)args;
  80   2              g_curStepInfo = stepInfo->step;
  81   2              g_stepCount = stepInfo->count - 1;
  82   2              g_sysStatus = SYS_STATUS_BUSY;
  83   2              MotorStart(g_curStepInfo->id, g_curStepInfo->dir, g_curStepInfo->count);
  84   2              break;
  85   2          default:
  86   2              break;
  87   2          }
  88   1      }
  89          
  90          void SysInit(void)
  91          {
  92   1          HalInit();
  93   1          MProtoInit(sysEventHandle);
  94   1          MotorInit(sysMotorEventHandle);
  95   1          sysMotorInit();
  96   1      }
  97          
  98          void SysPoll(void)
  99          {
 100   1          MotorPoll();
 101   1          MProtoPoll();
 102   1      }
 103          
 104          SysStatus_t SysGetStatus(void)
 105          {
 106   1          return g_sysStatus;
 107   1      }
 108          
 109          uint8_t SysGetDevAddr(void)
 110          {
 111   1          return HalGetDevAddr();
 112   1      }
 113          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.00   SYS                                                                   07/10/2016 22:14:08 PAGE 3   

   CODE SIZE        =    326    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      5       6
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
